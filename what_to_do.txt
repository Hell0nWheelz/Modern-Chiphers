 __     __                _            _                         
 \ \   / /               | |          | |                        
  \ \_/ /__  _   _ _ __  | |_ __ _ ___| | _____    __ _ _ __ ___ 
   \   / _ \| | | | '__| | __/ _` / __| |/ / __|  / _` | '__/ _ \
    | | (_) | |_| | |    | || (_| \__ \   <\__ \ | (_| | | |  __/
    |_|\___/ \__,_|_|     \__\__,_|___/_|\_\___/  \__,_|_|  \___|

Matt = AES_CBC
David = AES_CFB 
Waymon = DES_CFB

- Implement your cipher mode using the default ECB MODE
- If no IV is given, an IV vector must be generated and
	used. It will be stored in the first portions of the
	ciphertext in the file
- If no IV is given, it assumes the first portion of the
	ciphertext in the file is the IV
- If IV is given, you don't do a generation, and you don'the
	store it in the file
- The padding scheme is based on the number of padding 
	characters needed. If you need to pad 5 byte characters
	it would look like '\x00', '\x00', '\x00', '\x00', '\x05'
	where the last byte signifies how many bytes there are
- You must implement both encryption and decryption for your
	mode and test it using an online website like
	http://des.online-domain-tools.com/
- You must also implement your portion of the readme file
	for your cipher. Including example input and output. 
	You must verify you get the same result with an 
	online website.

You have until Sunday to implement this or you're FIRED!